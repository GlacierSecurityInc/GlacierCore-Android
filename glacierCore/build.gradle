/*
 * Copyright (c) 2012-2016 Arne Schwabe
 * Distributed under the GNU GPL v2 with additional terms. For full terms see the file doc/LICENSE.txt
 */

import com.android.builder.model.ProductFlavor

apply plugin: 'com.android.application'

apply plugin: 'checkstyle'
  checkstyle {
    showViolations true
  }

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.google.com' }
}

dependencies {
    compile 'com.android.support:support-annotations:26.1.0'
    compile 'com.android.support:cardview-v7:26.0.0'
    compile 'com.android.support:recyclerview-v7:26.0.0'
    //    compile 'ch.acra:acra:4.5.0'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    testCompile 'junit:junit:4.12'
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.0'

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 26
        versionCode = 146
        versionName = "2.0.5"
        archivesBaseName += "-$versionName"
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'ovpnlibs/assets']
            jniLibs.srcDirs = ['ovpnlibs/jniLibs']
            jni.srcDirs = [] //disable automatic ndk-build
        }
        
        ovpn3 {
         
        }

        debug {

        }

        release {

        }
    }

    /*
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }*/

    signingConfigs {
        release
    }

    lintOptions {
        enable 'BackButton', 'EasterEgg', 'StopShip', 'IconExpectedSize', 'GradleDynamicVersion', 'NewerVersionAvailable'
        warning 'ImpliedQuantity', 'MissingQuantity'
        disable 'MissingTranslation', 'UnsafeNativeCodeLocation'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "implementation"

    productFlavors {
   /*ovpn3 {
        dimension "implementation"

    } */

      normal {
          dimension "implementation"
      }

    }


}



// ~/.gradle/gradle.properties
if (project.hasProperty('keystoreFile') &&
        project.hasProperty('keystorePassword') &&
        project.hasProperty('keystoreAliasPassword')) {
    android.signingConfigs.release.storeFile = file(keystoreFile)
    android.signingConfigs.release.storePassword = keystorePassword
    android.signingConfigs.release.keyPassword = keystoreAliasPassword
    android.signingConfigs.release.keyAlias = keystoreAlias
} else {
    android.buildTypes.release.signingConfig = null
}

/*tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}
*/

